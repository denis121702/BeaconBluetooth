//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by slsvcutil, version 4.0.50826.0
// 
namespace WirelessCalculationContract
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasurePoint", Namespace="http://schemas.datacontract.org/2004/07/WirelessCalculationContract")]
    public partial class MeasurePoint : object
    {
        
        private string BssidField;
        
        private uint CenterFrequencyField;
        
        private double ConstantField;
        
        private uint QualityField;
        
        private double RssiLevelField;
        
        private string SsidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bssid
        {
            get
            {
                return this.BssidField;
            }
            set
            {
                this.BssidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint CenterFrequency
        {
            get
            {
                return this.CenterFrequencyField;
            }
            set
            {
                this.CenterFrequencyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Constant
        {
            get
            {
                return this.ConstantField;
            }
            set
            {
                this.ConstantField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Quality
        {
            get
            {
                return this.QualityField;
            }
            set
            {
                this.QualityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RssiLevel
        {
            get
            {
                return this.RssiLevelField;
            }
            set
            {
                this.RssiLevelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssid
        {
            get
            {
                return this.SsidField;
            }
            set
            {
                this.SsidField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/WirelessCalculationContract")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WirelessCalculationContract.DataContract.MeasureSector))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WirelessCalculationContract.AccessPoint))]
    public partial class Position : object
    {
        
        private System.Guid DeviceIdField;
        
        private System.DateTime TimeField;
        
        private int XField;
        
        private int XRealField;
        
        private int YField;
        
        private int YRealField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceId
        {
            get
            {
                return this.DeviceIdField;
            }
            set
            {
                this.DeviceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time
        {
            get
            {
                return this.TimeField;
            }
            set
            {
                this.TimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X
        {
            get
            {
                return this.XField;
            }
            set
            {
                this.XField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XReal
        {
            get
            {
                return this.XRealField;
            }
            set
            {
                this.XRealField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y
        {
            get
            {
                return this.YField;
            }
            set
            {
                this.YField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YReal
        {
            get
            {
                return this.YRealField;
            }
            set
            {
                this.YRealField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessPoint", Namespace="http://schemas.datacontract.org/2004/07/WirelessCalculationContract")]
    public partial class AccessPoint : WirelessCalculationContract.Position
    {
        
        private string BssidField;
        
        private uint CenterFrequencyField;
        
        private uint QualityField;
        
        private double RssiLevelField;
        
        private string SsidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bssid
        {
            get
            {
                return this.BssidField;
            }
            set
            {
                this.BssidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint CenterFrequency
        {
            get
            {
                return this.CenterFrequencyField;
            }
            set
            {
                this.CenterFrequencyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Quality
        {
            get
            {
                return this.QualityField;
            }
            set
            {
                this.QualityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RssiLevel
        {
            get
            {
                return this.RssiLevelField;
            }
            set
            {
                this.RssiLevelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssid
        {
            get
            {
                return this.SsidField;
            }
            set
            {
                this.SsidField = value;
            }
        }
    }
}
namespace WirelessCalculationContract.DataContract
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasureSector", Namespace="http://schemas.datacontract.org/2004/07/WirelessCalculationContract.DataContract")]
    public partial class MeasureSector : WirelessCalculationContract.Position
    {
        
        private WirelessCalculationContract.MeasurePoint[] ApListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WirelessCalculationContract.MeasurePoint[] ApList
        {
            get
            {
                return this.ApListField;
            }
            set
            {
                this.ApListField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IWirelessCalculation")]
public interface IWirelessCalculation
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWirelessCalculation/GetMeasurePosition", ReplyAction="http://tempuri.org/IWirelessCalculation/GetMeasurePositionResponse")]
    System.IAsyncResult BeginGetMeasurePosition(System.Guid deviceId, WirelessCalculationContract.MeasurePoint[] measurePointList, System.AsyncCallback callback, object asyncState);
    
    WirelessCalculationContract.Position[] EndGetMeasurePosition(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWirelessCalculation/SetAccessPoint", ReplyAction="http://tempuri.org/IWirelessCalculation/SetAccessPointResponse")]
    System.IAsyncResult BeginSetAccessPoint(WirelessCalculationContract.AccessPoint accessPoint, System.AsyncCallback callback, object asyncState);
    
    bool EndSetAccessPoint(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWirelessCalculation/SetMeasurePoint", ReplyAction="http://tempuri.org/IWirelessCalculation/SetMeasurePointResponse")]
    System.IAsyncResult BeginSetMeasurePoint(WirelessCalculationContract.DataContract.MeasureSector measureSector, System.AsyncCallback callback, object asyncState);
    
    bool EndSetMeasurePoint(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWirelessCalculation/GetAccessPointList", ReplyAction="http://tempuri.org/IWirelessCalculation/GetAccessPointListResponse")]
    System.IAsyncResult BeginGetAccessPointList(System.AsyncCallback callback, object asyncState);
    
    WirelessCalculationContract.AccessPoint[] EndGetAccessPointList(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWirelessCalculation/DeleteAllData", ReplyAction="http://tempuri.org/IWirelessCalculation/DeleteAllDataResponse")]
    System.IAsyncResult BeginDeleteAllData(System.AsyncCallback callback, object asyncState);
    
    bool EndDeleteAllData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWirelessCalculation/GetVersion", ReplyAction="http://tempuri.org/IWirelessCalculation/GetVersionResponse")]
    System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState);
    
    string EndGetVersion(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IWirelessCalculationChannel : IWirelessCalculation, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetMeasurePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetMeasurePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WirelessCalculationContract.Position[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WirelessCalculationContract.Position[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SetAccessPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public SetAccessPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SetMeasurePointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public SetMeasurePointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAccessPointListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAccessPointListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WirelessCalculationContract.AccessPoint[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WirelessCalculationContract.AccessPoint[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteAllDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DeleteAllDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class WirelessCalculationClient : System.ServiceModel.ClientBase<IWirelessCalculation>, IWirelessCalculation
{
    
    private BeginOperationDelegate onBeginGetMeasurePositionDelegate;
    
    private EndOperationDelegate onEndGetMeasurePositionDelegate;
    
    private System.Threading.SendOrPostCallback onGetMeasurePositionCompletedDelegate;
    
    private BeginOperationDelegate onBeginSetAccessPointDelegate;
    
    private EndOperationDelegate onEndSetAccessPointDelegate;
    
    private System.Threading.SendOrPostCallback onSetAccessPointCompletedDelegate;
    
    private BeginOperationDelegate onBeginSetMeasurePointDelegate;
    
    private EndOperationDelegate onEndSetMeasurePointDelegate;
    
    private System.Threading.SendOrPostCallback onSetMeasurePointCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAccessPointListDelegate;
    
    private EndOperationDelegate onEndGetAccessPointListDelegate;
    
    private System.Threading.SendOrPostCallback onGetAccessPointListCompletedDelegate;
    
    private BeginOperationDelegate onBeginDeleteAllDataDelegate;
    
    private EndOperationDelegate onEndDeleteAllDataDelegate;
    
    private System.Threading.SendOrPostCallback onDeleteAllDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetVersionDelegate;
    
    private EndOperationDelegate onEndGetVersionDelegate;
    
    private System.Threading.SendOrPostCallback onGetVersionCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public WirelessCalculationClient()
    {
    }
    
    public WirelessCalculationClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public WirelessCalculationClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WirelessCalculationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WirelessCalculationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<GetMeasurePositionCompletedEventArgs> GetMeasurePositionCompleted;
    
    public event System.EventHandler<SetAccessPointCompletedEventArgs> SetAccessPointCompleted;
    
    public event System.EventHandler<SetMeasurePointCompletedEventArgs> SetMeasurePointCompleted;
    
    public event System.EventHandler<GetAccessPointListCompletedEventArgs> GetAccessPointListCompleted;
    
    public event System.EventHandler<DeleteAllDataCompletedEventArgs> DeleteAllDataCompleted;
    
    public event System.EventHandler<GetVersionCompletedEventArgs> GetVersionCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWirelessCalculation.BeginGetMeasurePosition(System.Guid deviceId, WirelessCalculationContract.MeasurePoint[] measurePointList, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetMeasurePosition(deviceId, measurePointList, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WirelessCalculationContract.Position[] IWirelessCalculation.EndGetMeasurePosition(System.IAsyncResult result)
    {
        return base.Channel.EndGetMeasurePosition(result);
    }
    
    private System.IAsyncResult OnBeginGetMeasurePosition(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid deviceId = ((System.Guid)(inValues[0]));
        WirelessCalculationContract.MeasurePoint[] measurePointList = ((WirelessCalculationContract.MeasurePoint[])(inValues[1]));
        return ((IWirelessCalculation)(this)).BeginGetMeasurePosition(deviceId, measurePointList, callback, asyncState);
    }
    
    private object[] OnEndGetMeasurePosition(System.IAsyncResult result)
    {
        WirelessCalculationContract.Position[] retVal = ((IWirelessCalculation)(this)).EndGetMeasurePosition(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetMeasurePositionCompleted(object state)
    {
        if ((this.GetMeasurePositionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetMeasurePositionCompleted(this, new GetMeasurePositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetMeasurePositionAsync(System.Guid deviceId, WirelessCalculationContract.MeasurePoint[] measurePointList)
    {
        this.GetMeasurePositionAsync(deviceId, measurePointList, null);
    }
    
    public void GetMeasurePositionAsync(System.Guid deviceId, WirelessCalculationContract.MeasurePoint[] measurePointList, object userState)
    {
        if ((this.onBeginGetMeasurePositionDelegate == null))
        {
            this.onBeginGetMeasurePositionDelegate = new BeginOperationDelegate(this.OnBeginGetMeasurePosition);
        }
        if ((this.onEndGetMeasurePositionDelegate == null))
        {
            this.onEndGetMeasurePositionDelegate = new EndOperationDelegate(this.OnEndGetMeasurePosition);
        }
        if ((this.onGetMeasurePositionCompletedDelegate == null))
        {
            this.onGetMeasurePositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMeasurePositionCompleted);
        }
        base.InvokeAsync(this.onBeginGetMeasurePositionDelegate, new object[] {
                    deviceId,
                    measurePointList}, this.onEndGetMeasurePositionDelegate, this.onGetMeasurePositionCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWirelessCalculation.BeginSetAccessPoint(WirelessCalculationContract.AccessPoint accessPoint, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSetAccessPoint(accessPoint, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IWirelessCalculation.EndSetAccessPoint(System.IAsyncResult result)
    {
        return base.Channel.EndSetAccessPoint(result);
    }
    
    private System.IAsyncResult OnBeginSetAccessPoint(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WirelessCalculationContract.AccessPoint accessPoint = ((WirelessCalculationContract.AccessPoint)(inValues[0]));
        return ((IWirelessCalculation)(this)).BeginSetAccessPoint(accessPoint, callback, asyncState);
    }
    
    private object[] OnEndSetAccessPoint(System.IAsyncResult result)
    {
        bool retVal = ((IWirelessCalculation)(this)).EndSetAccessPoint(result);
        return new object[] {
                retVal};
    }
    
    private void OnSetAccessPointCompleted(object state)
    {
        if ((this.SetAccessPointCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SetAccessPointCompleted(this, new SetAccessPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SetAccessPointAsync(WirelessCalculationContract.AccessPoint accessPoint)
    {
        this.SetAccessPointAsync(accessPoint, null);
    }
    
    public void SetAccessPointAsync(WirelessCalculationContract.AccessPoint accessPoint, object userState)
    {
        if ((this.onBeginSetAccessPointDelegate == null))
        {
            this.onBeginSetAccessPointDelegate = new BeginOperationDelegate(this.OnBeginSetAccessPoint);
        }
        if ((this.onEndSetAccessPointDelegate == null))
        {
            this.onEndSetAccessPointDelegate = new EndOperationDelegate(this.OnEndSetAccessPoint);
        }
        if ((this.onSetAccessPointCompletedDelegate == null))
        {
            this.onSetAccessPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetAccessPointCompleted);
        }
        base.InvokeAsync(this.onBeginSetAccessPointDelegate, new object[] {
                    accessPoint}, this.onEndSetAccessPointDelegate, this.onSetAccessPointCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWirelessCalculation.BeginSetMeasurePoint(WirelessCalculationContract.DataContract.MeasureSector measureSector, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSetMeasurePoint(measureSector, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IWirelessCalculation.EndSetMeasurePoint(System.IAsyncResult result)
    {
        return base.Channel.EndSetMeasurePoint(result);
    }
    
    private System.IAsyncResult OnBeginSetMeasurePoint(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WirelessCalculationContract.DataContract.MeasureSector measureSector = ((WirelessCalculationContract.DataContract.MeasureSector)(inValues[0]));
        return ((IWirelessCalculation)(this)).BeginSetMeasurePoint(measureSector, callback, asyncState);
    }
    
    private object[] OnEndSetMeasurePoint(System.IAsyncResult result)
    {
        bool retVal = ((IWirelessCalculation)(this)).EndSetMeasurePoint(result);
        return new object[] {
                retVal};
    }
    
    private void OnSetMeasurePointCompleted(object state)
    {
        if ((this.SetMeasurePointCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SetMeasurePointCompleted(this, new SetMeasurePointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SetMeasurePointAsync(WirelessCalculationContract.DataContract.MeasureSector measureSector)
    {
        this.SetMeasurePointAsync(measureSector, null);
    }
    
    public void SetMeasurePointAsync(WirelessCalculationContract.DataContract.MeasureSector measureSector, object userState)
    {
        if ((this.onBeginSetMeasurePointDelegate == null))
        {
            this.onBeginSetMeasurePointDelegate = new BeginOperationDelegate(this.OnBeginSetMeasurePoint);
        }
        if ((this.onEndSetMeasurePointDelegate == null))
        {
            this.onEndSetMeasurePointDelegate = new EndOperationDelegate(this.OnEndSetMeasurePoint);
        }
        if ((this.onSetMeasurePointCompletedDelegate == null))
        {
            this.onSetMeasurePointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetMeasurePointCompleted);
        }
        base.InvokeAsync(this.onBeginSetMeasurePointDelegate, new object[] {
                    measureSector}, this.onEndSetMeasurePointDelegate, this.onSetMeasurePointCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWirelessCalculation.BeginGetAccessPointList(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAccessPointList(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WirelessCalculationContract.AccessPoint[] IWirelessCalculation.EndGetAccessPointList(System.IAsyncResult result)
    {
        return base.Channel.EndGetAccessPointList(result);
    }
    
    private System.IAsyncResult OnBeginGetAccessPointList(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IWirelessCalculation)(this)).BeginGetAccessPointList(callback, asyncState);
    }
    
    private object[] OnEndGetAccessPointList(System.IAsyncResult result)
    {
        WirelessCalculationContract.AccessPoint[] retVal = ((IWirelessCalculation)(this)).EndGetAccessPointList(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAccessPointListCompleted(object state)
    {
        if ((this.GetAccessPointListCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAccessPointListCompleted(this, new GetAccessPointListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAccessPointListAsync()
    {
        this.GetAccessPointListAsync(null);
    }
    
    public void GetAccessPointListAsync(object userState)
    {
        if ((this.onBeginGetAccessPointListDelegate == null))
        {
            this.onBeginGetAccessPointListDelegate = new BeginOperationDelegate(this.OnBeginGetAccessPointList);
        }
        if ((this.onEndGetAccessPointListDelegate == null))
        {
            this.onEndGetAccessPointListDelegate = new EndOperationDelegate(this.OnEndGetAccessPointList);
        }
        if ((this.onGetAccessPointListCompletedDelegate == null))
        {
            this.onGetAccessPointListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccessPointListCompleted);
        }
        base.InvokeAsync(this.onBeginGetAccessPointListDelegate, null, this.onEndGetAccessPointListDelegate, this.onGetAccessPointListCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWirelessCalculation.BeginDeleteAllData(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteAllData(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IWirelessCalculation.EndDeleteAllData(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteAllData(result);
    }
    
    private System.IAsyncResult OnBeginDeleteAllData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IWirelessCalculation)(this)).BeginDeleteAllData(callback, asyncState);
    }
    
    private object[] OnEndDeleteAllData(System.IAsyncResult result)
    {
        bool retVal = ((IWirelessCalculation)(this)).EndDeleteAllData(result);
        return new object[] {
                retVal};
    }
    
    private void OnDeleteAllDataCompleted(object state)
    {
        if ((this.DeleteAllDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteAllDataCompleted(this, new DeleteAllDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DeleteAllDataAsync()
    {
        this.DeleteAllDataAsync(null);
    }
    
    public void DeleteAllDataAsync(object userState)
    {
        if ((this.onBeginDeleteAllDataDelegate == null))
        {
            this.onBeginDeleteAllDataDelegate = new BeginOperationDelegate(this.OnBeginDeleteAllData);
        }
        if ((this.onEndDeleteAllDataDelegate == null))
        {
            this.onEndDeleteAllDataDelegate = new EndOperationDelegate(this.OnEndDeleteAllData);
        }
        if ((this.onDeleteAllDataCompletedDelegate == null))
        {
            this.onDeleteAllDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAllDataCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteAllDataDelegate, null, this.onEndDeleteAllDataDelegate, this.onDeleteAllDataCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWirelessCalculation.BeginGetVersion(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetVersion(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IWirelessCalculation.EndGetVersion(System.IAsyncResult result)
    {
        return base.Channel.EndGetVersion(result);
    }
    
    private System.IAsyncResult OnBeginGetVersion(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IWirelessCalculation)(this)).BeginGetVersion(callback, asyncState);
    }
    
    private object[] OnEndGetVersion(System.IAsyncResult result)
    {
        string retVal = ((IWirelessCalculation)(this)).EndGetVersion(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetVersionCompleted(object state)
    {
        if ((this.GetVersionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetVersionAsync()
    {
        this.GetVersionAsync(null);
    }
    
    public void GetVersionAsync(object userState)
    {
        if ((this.onBeginGetVersionDelegate == null))
        {
            this.onBeginGetVersionDelegate = new BeginOperationDelegate(this.OnBeginGetVersion);
        }
        if ((this.onEndGetVersionDelegate == null))
        {
            this.onEndGetVersionDelegate = new EndOperationDelegate(this.OnEndGetVersion);
        }
        if ((this.onGetVersionCompletedDelegate == null))
        {
            this.onGetVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVersionCompleted);
        }
        base.InvokeAsync(this.onBeginGetVersionDelegate, null, this.onEndGetVersionDelegate, this.onGetVersionCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IWirelessCalculation CreateChannel()
    {
        return new WirelessCalculationClientChannel(this);
    }
    
    private class WirelessCalculationClientChannel : ChannelBase<IWirelessCalculation>, IWirelessCalculation
    {
        
        public WirelessCalculationClientChannel(System.ServiceModel.ClientBase<IWirelessCalculation> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginGetMeasurePosition(System.Guid deviceId, WirelessCalculationContract.MeasurePoint[] measurePointList, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[2];
            _args[0] = deviceId;
            _args[1] = measurePointList;
            System.IAsyncResult _result = base.BeginInvoke("GetMeasurePosition", _args, callback, asyncState);
            return _result;
        }
        
        public WirelessCalculationContract.Position[] EndGetMeasurePosition(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WirelessCalculationContract.Position[] _result = ((WirelessCalculationContract.Position[])(base.EndInvoke("GetMeasurePosition", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginSetAccessPoint(WirelessCalculationContract.AccessPoint accessPoint, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = accessPoint;
            System.IAsyncResult _result = base.BeginInvoke("SetAccessPoint", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndSetAccessPoint(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("SetAccessPoint", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginSetMeasurePoint(WirelessCalculationContract.DataContract.MeasureSector measureSector, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = measureSector;
            System.IAsyncResult _result = base.BeginInvoke("SetMeasurePoint", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndSetMeasurePoint(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("SetMeasurePoint", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAccessPointList(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetAccessPointList", _args, callback, asyncState);
            return _result;
        }
        
        public WirelessCalculationContract.AccessPoint[] EndGetAccessPointList(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WirelessCalculationContract.AccessPoint[] _result = ((WirelessCalculationContract.AccessPoint[])(base.EndInvoke("GetAccessPointList", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginDeleteAllData(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("DeleteAllData", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndDeleteAllData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("DeleteAllData", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetVersion", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetVersion(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetVersion", _args, result)));
            return _result;
        }
    }
}
